#include <iostream>
#include <vector>
#include <iomanip>
using namespace std;

class Product {
public:
    string productID, name;
    double price;

    Product(string id, string n, double p) : productID(id), name(n), price(p) {}
};

class ShoppingCart {
private:
    vector<pair<Product, int>> cart;
public:
    void addProduct(const Product &product, int quantity) {
        cart.push_back({product, quantity});
        cout << "Product added successfully!\n";
    }

    void viewCart() {
        if (cart.empty()) {
            cout << "Shopping Cart is empty.\n";
            return;
        }
        cout << "\nShopping Cart:\n";
        cout << left << setw(10) << "Product ID" << setw(15) << "Name" << setw(10) << "Price" << "Quantity" << endl;
        for (const auto &item : cart) {
            cout << setw(10) << item.first.productID << setw(15) << item.first.name << setw(10) << item.first.price << item.second << endl;
        }
    }

    vector<pair<Product, int>> checkout() {
        return cart;
    }
};

class Order {
public:
    static int orderCounter;
    int orderID;
    double totalAmount;
    vector<pair<Product, int>> orderDetails;

    Order(vector<pair<Product, int>> items) {
        orderID = ++orderCounter;
        orderDetails = items;
        totalAmount = 0;
        for (const auto &item : items) {
            totalAmount += item.first.price * item.second;
        }
    }

    void displayOrder() {
        cout << "\nOrder ID: " << orderID << endl;
        cout << "Total Amount: " << totalAmount << endl;
        cout << "Order Details:\n";
        cout << left << setw(10) << "Product ID" << setw(15) << "Name" << setw(10) << "Price" << "Quantity" << endl;
        for (const auto &item : orderDetails) {
            cout << setw(10) << item.first.productID << setw(15) << item.first.name << setw(10) << item.first.price << item.second << endl;
        }
    }
};
int Order::orderCounter = 0;

void displayProducts(const vector<Product> &products) {
    cout << "\nAvailable Products:\n";
    cout << left << setw(10) << "Product ID" << setw(15) << "Name" << "Price" << endl;
    for (const auto &product : products) {
        cout << setw(10) << product.productID << setw(15) << product.name << product.price << endl;
    }
}

int main() {
    vector<Product> products = {
        Product("ABC", "Paper", 20),
        Product("CDE", "Pencil", 10),
        Product("QWE", "Paper", 20),
        Product("TRE", "Pencil", 10),
        Product("ASD", "Paper", 20),
        Product("ZXC", "Pencil", 10)
    };
    
    ShoppingCart cart;
    vector<Order> orders;
    int choice;
    
    do {
        cout << "\nMenu:\n1. View Products\n2. View Shopping Cart\n3. View Orders\n4. Exit\nEnter choice: ";
        cin >> choice;
        
        if (choice == 1) {
            displayProducts(products);
            string productID;
            char addMore;
            do {
                cout << "Enter the Product ID to add to the cart: ";
                cin >> productID;
                bool found = false;
                for (const auto &product : products) {
                    if (product.productID == productID) {
                        int quantity;
                        cout << "Enter quantity: ";
                        cin >> quantity;
                        cart.addProduct(product, quantity);
                        found = true;
                        break;
                    }
                }
                if (!found) {
                    cout << "Invalid Product ID.\n";
                }
                cout << "Do you want to add another product? (Y/N): ";
                cin >> addMore;
            } while (addMore == 'Y' || addMore == 'y');
        }
        else if (choice == 2) {
            cart.viewCart();
            char checkout;
            cout << "Do you want to check out all the products? (Y/N): ";
            cin >> checkout;
            if (checkout == 'Y' || checkout == 'y') {
                vector<pair<Product, int>> checkoutItems = cart.checkout();
                if (!checkoutItems.empty()) {
                    orders.emplace_back(checkoutItems);
                    cout << "You have successfully checked out the products!\n";
                }
            }
        }
        else if (choice == 3) {
            if (orders.empty()) {
                cout << "No orders found.\n";
            } else {
                for (auto &order : orders) {
                    order.displayOrder();
                }
            }
        }
    } while (choice != 4);
    
    cout << "Thank you for using our e-commerce system!\n";
    return 0;
}
